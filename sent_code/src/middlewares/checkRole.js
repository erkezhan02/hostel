const jwt = require("jsonwebtoken");
const User = require("../models/User");

module.exports = (requiredRole) => {
    return async (req, res, next) => {
        try {
            const token = req.headers["authorization"]?.split(" ")[1];

            if (!token) {
                return res.status(401).json({ message: "üö´ –¢–æ–∫–µ–Ω –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω." });
            }

            // üîê –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞
            jwt.verify(token, process.env.JWT_SECRET || "secretKey", async (err, decoded) => {
                if (err) {
                    return res.status(403).json({ message: "üö´ –ù–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –∏—Å—Ç–µ–∫—à–∏–π —Ç–æ–∫–µ–Ω." });
                }

                // üìß –ò–∑–≤–ª–µ–∫–∞–µ–º email –∏–∑ —Ç–æ–∫–µ–Ω–∞
                const userEmail = decoded.email;
                if (!userEmail) {
                    return res.status(400).json({ message: "‚ùå Email –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–æ–∫–µ–Ω–µ." });
                }

                // üîç –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email
                const user = await User.findOne({ email: userEmail }).populate("roleId", "name");

                if (!user) {
                    return res.status(404).json({ message: "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω." });
                }

                // üõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏
                if (user.roleId?.name !== requiredRole) {
                    return res.status(403).json({
                        message: `üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω. –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ —Ä–æ–ª—å: ${requiredRole}.`
                    });
                }

                // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ req –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
                req.user = user;
                next();
            });
        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –≤ middleware –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–∏:", error);
            res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞." });
        }
    };
};
